{"version":3,"sources":["modules/common/redux.helpers.js","modules/movie-browser/movie-browser.service.js","modules/movie-browser/movie-browser.actions.js","modules/movie-browser/movie-browser.helpers.js","modules/movie-browser/movie-modal/movie-modal.actions.js","modules/movie-browser/movie-card/movie-card.component.js","modules/common/loader.component.js","modules/movie-browser/movie-list/movie-list.component.js","modules/movie-browser/movie-modal/movie-modal.container.js","modules/movie-browser/movie-browser.container.js","modules/common/scroll.helpers.js","App.js","serviceWorker.js","modules/movie-browser/movie-modal/movie-modal.reducer.js","modules/movie-browser/movie-browser.reducers.js","store.js","index.js"],"names":["createReducer","initialState","arguments","length","undefined","actionHandlerKeyFuncs","state","action","actionHandler","type","createAction","actionProps","Object","objectSpread","createAsyncActionCreator","actionType","asyncRequestFn","requestParams","dispatch","concat","request","then","response","json","catch","error","initialAsyncState","isLoading","createAsyncReducer","_objectSpread2","defineProperty","createMovieDbUrl","relativeUrl","queryParams","baseUrl","keys","forEach","paramName","getTopMovies","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","page","fullUrl","wrap","_context","prev","next","abrupt","fetch","stop","_x","apply","this","searchMovies","_ref4","_callee2","_ref3","query","_context2","_x2","getMovieDetails","_ref6","_callee3","_ref5","movieId","_context3","_x3","GET_TOP_MOVIES","SEARCH_MOVIES","GET_MOVIE_DETAILS","movieService","TMDB_IMAGE_BASE_URL","width","updateMoviePictureUrls","movieResult","backdrop_path","poster_path","styles","cardMedia","maxHeight","overflow","card","cursor","height","bgImage","MovieCardComponent","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isMouseOver","_this2","_this$props","movie","openMovieModal","subtitle","overview","react_default","createElement","index_es","style","onMouseOver","setState","onMouseLeave","onClick","id","overlay","title","src","alt","React","Component","connect","refreshStyle","position","display","margin","LoaderComponent","children","top","left","size","status","movieColumn","marginBottom","MovieListComponent","movies","movieColumns","map","Col","key","xs","sm","md","lg","movie_card_component","Row","loader_component","backgroundUrl","backgroundImage","backgroundRepeat","backgroundSize","minHeight","color","padding","MovieModalContainer","nextProps","isOpen","closeMovieModal","movieHelpers","genres","genre","name","join","autoScrollBodyContent","modal","open","onRequestClose","popularity","budget","_","get","MovieBrowser","currentPage","currentMovies","handleScroll","bind","assertThisInitialized","window","onscroll","removeEventListener","topMovies","pageHeight","document","documentElement","scrollHeight","clientHeight","pageYOffset","scrollHelpers","nextPage","moviesResponse","toConsumableArray","results","className","Container","movie_list_component","movie_modal_container","movieBrowser","movieActions","App","MuiThemeProvider_default","movie_browser_container","Boolean","location","hostname","match","movieModalReducer","_createReducer","moviesSuccessReducer","existingMovies","movieBrowserReducer","combineReducers","movieModal","movieActionKeys","movieSearch","movieDetails","rootReducer","loggerMiddleware","createLogger","store","createStore","compose","applyMiddleware","thunkMiddlware","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d06ffd2.chunk.js","sourcesContent":["// Helper function to enables passing an object with\r\n// the action.type as the key and the reducer function as the value\r\nexport const createReducer = (initialState = {}, actionHandlerKeyFuncs = {}) => {\r\n  return (state = initialState, action) => {\r\n    const actionHandler = actionHandlerKeyFuncs[action.type];\r\n    return actionHandler ? actionHandler(state, action) : state;\r\n  }\r\n};\r\n\r\n// Creates a basic action\r\nconst createAction = (type, actionProps) => {\r\n  return {\r\n    type,\r\n    ...actionProps\r\n  };\r\n}\r\n\r\n// e.g. createAsyncActionCreator('GET_TOP_MOVIES', getTopMovies, {page: 1})\r\n// I admit that passing the asyncRequestFn without params is not ideal, but \r\n// wanted to capture the requestParams as part of the start action for logging transparency\r\nexport const createAsyncActionCreator = (actionType, asyncRequestFn, requestParams) => {\r\n  return (dispatch) => {\r\n    dispatch(createAction(`${actionType}_START`, {request: requestParams}));\r\n    // NOTE: asyncRequestFn must accept single object parameter\r\n    // in order to resolve param values\r\n    return asyncRequestFn(requestParams)\r\n      .then(response => {\r\n        response.json()\r\n          .then(json => dispatch(createAction(`${actionType}_SUCCESS`, { response: json })))\r\n          .catch(error => dispatch(createAction(`${actionType}_ERROR`, { error })));\r\n      });\r\n      \r\n  };\r\n}\r\n\r\n// We're setting these based on the state of the request\r\nconst initialAsyncState = { isLoading: false, response: null, request: null };\r\n\r\n// Generic way of handling state changes for an async request\r\n// Can override {action_type}_START, {action_type}_SUCCESS, {action_type}_ERROR\r\nexport const createAsyncReducer = (actionType, actionHandlerKeyFuncs = {}, initialState = initialAsyncState) => {\r\n   const startReducerFn = (state, action) => ({\r\n      ...state,\r\n      isLoading: true,\r\n      request: action.request\r\n  });\r\n\r\n  const successReducerFn = (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      response: action.response\r\n  });\r\n  const errorReducerFn = (state, action) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      error: action.error\r\n  });\r\n\r\n  return createReducer(\r\n    initialState,\r\n    {\r\n      [`${actionType}_START`]: startReducerFn,\r\n      [`${actionType}_SUCCESS`]: successReducerFn,\r\n      [`${actionType}_ERROR`]: errorReducerFn,\r\n      ...actionHandlerKeyFuncs\r\n    }\r\n  );\r\n}","// WARNING: Don't check your actual API key into GitHub\r\nconst MOVIE_DB_API_KEY = 'f8c2fb3301267b649b40cb8d22023776';\r\nconst MOVIE_DB_BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst createMovieDbUrl = (relativeUrl, queryParams) => {\r\n  let baseUrl = `${MOVIE_DB_BASE_URL}${relativeUrl}?api_key=${MOVIE_DB_API_KEY}&language=en-US`;\r\n  if (queryParams) {\r\n    Object.keys(queryParams)\r\n      .forEach(paramName => baseUrl += `&${paramName}=${queryParams[paramName]}`);\r\n  }\r\n  return baseUrl;\r\n}\r\n\r\nexport const getTopMovies = async ({page}) => {\r\n  const fullUrl = createMovieDbUrl('/movie/top_rated', {\r\n    page\r\n  });\r\n  return fetch(fullUrl);\r\n}\r\n\r\nexport const searchMovies = async ({ page, query}) => {\r\n  const fullUrl = createMovieDbUrl('/search/movie', {\r\n    page,\r\n    query\r\n  });\r\n  return fetch(fullUrl);\r\n}\r\n\r\nexport const getMovieDetails = async ({movieId}) => {\r\n  const fullUrl = createMovieDbUrl(`/movie/${movieId}`);\r\n  return fetch(fullUrl);\r\n}","import {createAsyncActionCreator} from '../common/redux.helpers';\r\nimport * as movieService from './movie-browser.service';\r\n\r\nexport const keys = {\r\n  'GET_TOP_MOVIES': 'GET_TOP_MOVIES',\r\n  'SEARCH_MOVIES': 'SEARCH_MOVIES',\r\n  'GET_MOVIE_DETAILS': 'GET_MOVIE_DETAILS',\r\n};\r\n\r\nexport const getTopMovies = (page) => createAsyncActionCreator(\r\n  // actionType\r\n  keys.GET_TOP_MOVIES,\r\n  // requestFn\r\n  movieService.getTopMovies, \r\n  // requestParams\r\n  {page}\r\n);\r\n\r\nexport const searchMovies = (query, page) => createAsyncActionCreator(\r\n  keys.SEARCH_MOVIES,\r\n  movieService.searchMovies, \r\n  {query, page}\r\n);\r\n\r\nexport const getMovieDetails = (movieId) => createAsyncActionCreator(\r\n  keys.GET_MOVIE_DETAILS,\r\n  movieService.getMovieDetails, \r\n  {movieId}\r\n);","\r\nconst TMDB_IMAGE_BASE_URL = (width = 300) => `https://image.tmdb.org/t/p/w${width}`;\r\n\r\nexport const updateMoviePictureUrls = (movieResult, width = 300) => {\r\n  if (movieResult) {\r\n    return {\r\n      ...movieResult,\r\n      backdrop_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.backdrop_path}`,\r\n      poster_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.poster_path}`,\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nexport const getMoviesList = (moviesResponse) => {\r\n  return !!moviesResponse ? ([\r\n    ...moviesResponse.results.map(movieResult => updateMoviePictureUrls(movieResult))\r\n  ]) : null;\r\n}","// List of movie modal action type keys\r\nexport const keys = {\r\n    'OPEN_MOVIE_MODAL': 'OPEN_MOVIE_MODAL',\r\n    'CLOSE_MOVIE_MODAL': 'CLOSE_MOVIE_MODAL',\r\n  }\r\n  \r\n  // Opens the <MovieModal /> with a movieId\r\n  export const openMovieModal = (movieId) => {\r\n    return {\r\n      type: keys.OPEN_MOVIE_MODAL,\r\n      movieId\r\n    };\r\n  }\r\n  \r\n  // Closes the <MovieModal />\r\n  export const closeMovieModal = () => {\r\n    return {\r\n      type: keys.CLOSE_MOVIE_MODAL\r\n    };\r\n  }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Card, CardTitle, CardMedia} from 'material-ui';\r\nimport {openMovieModal} from '../movie-modal/movie-modal.actions';\r\n\r\n// These are inline styles\r\n// You can pass styles as objects using this convention\r\nconst styles = {\r\n  cardMedia: {\r\n    maxHeight: 394,\r\n    overflow: 'hidden'\r\n  },\r\n  card: {\r\n    cursor: 'pointer',\r\n    height: 400,\r\n    overflow: 'hidden'\r\n  },\r\n  bgImage: {\r\n    width: '100%'\r\n  }\r\n};\r\n\r\nclass MovieCardComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Track if the mouse hovering over the movie card\r\n    this.state = {\r\n      isMouseOver: false\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    const {movie, openMovieModal} = this.props;\r\n    // The CardTitle.subtitle won't render if it's null\r\n    const subtitle = this.state.isMouseOver ? movie.overview : null;\r\n\r\n    return (\r\n      <Card\r\n        style={styles.card}\r\n        onMouseOver={() => this.setState({isMouseOver: true})}\r\n        onMouseLeave={() => this.setState({isMouseOver: false})}\r\n        onClick= {() => openMovieModal(movie.id)}\r\n      >\r\n        <CardMedia\r\n          style={styles.cardMedia}\r\n          overlay={\r\n            <CardTitle\r\n              title={movie.title} \r\n              subtitle={subtitle} \r\n            />\r\n          }\r\n        >\r\n          <img style={styles.bgImage} src={movie.poster_path} alt=\"\" />\r\n        </CardMedia>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  () => ({}),\r\n  { openMovieModal }\r\n)(MovieCardComponent);","import React from 'react';\r\n//import _ from 'lodash';\r\nimport {RefreshIndicator} from 'material-ui'\r\n\r\nconst styles = {\r\n  refreshStyle: {\r\n    position: 'relative',\r\n    display: 'block',\r\n    margin: '0 auto'\r\n  }\r\n};\r\n\r\nconst LoaderComponent = ({isLoading, children}) => {\r\n  if (isLoading) {\r\n    return (\r\n      <RefreshIndicator\r\n        style={styles.refreshStyle}\r\n        top={0}\r\n        left={0}\r\n        size={80}\r\n        status={'loading'} \r\n      />\r\n    );\r\n  }\r\n  // Render nothing if no children present\r\n  return children ? children : null;\r\n}\r\n\r\nexport default LoaderComponent;","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport MovieCard from '../movie-card/movie-card.component';\r\nimport LoaderComponent from '../../common/loader.component';\r\n\r\nconst styles = {\r\n  movieColumn: {\r\n    marginBottom: 20\r\n  }\r\n}\r\nconst MovieListComponent = ({movies, isLoading}) => {\r\n  const movieColumns = movies ? movies.map(movie => (\r\n    <Col style={styles.movieColumn} key={movie.id} xs={12} sm={4} md={3} lg={3}>\r\n      <MovieCard movie={movie} />\r\n    </Col>\r\n  )) : null;\r\n  \r\n  return (\r\n    <Row>\r\n      {movieColumns}\r\n      <LoaderComponent isLoading={isLoading} />\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default MovieListComponent;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Dialog } from 'material-ui';\r\nimport _ from 'lodash';\r\nimport { closeMovieModal } from './movie-modal.actions';\r\nimport { getMovieDetails } from '../movie-browser.actions';\r\nimport * as movieHelpers from '../movie-browser.helpers';\r\nimport Loader from '../../common/loader.component';\r\n\r\nconst styles = {\r\n  // Can use functions to dynamically build our CSS\r\n  dialogContent: (backgroundUrl) => ({\r\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${backgroundUrl})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: '100%',\r\n    height: '100%',\r\n    minHeight: 400,\r\n    color: 'white',\r\n    padding: 10\r\n  })\r\n}\r\n\r\nclass MovieModalContainer extends React.Component {\r\n  // Triggered right after a property is changed\r\n  componentWillReceiveProps(nextProps) {\r\n    // If we will receive a new movieId\r\n    if (nextProps.movieId && this.props.movieId !== nextProps.movieId) {\r\n      nextProps.getMovieDetails(nextProps.movieId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {isOpen, closeMovieModal, isLoading} = this.props;\r\n    //const loadingStatus = isLoading ? 'loading' : 'hide';\r\n    const movie = movieHelpers.updateMoviePictureUrls(this.props.movie);\r\n    //const movie = movieHelpers.getMoviesList(this.props.movie);\r\n    \r\n    const genres = (movie && movie.genres) ? movie.genres.map(genre => genre.name).join(', ') : '';\r\n\r\n    return (\r\n      <Dialog\r\n        autoScrollBodyContent={true}\r\n        title={null}\r\n        modal={false}\r\n        open={isOpen}\r\n        onRequestClose={closeMovieModal}\r\n      >\r\n        <Loader isLoading={isLoading}>\r\n          <div style={styles.dialogContent(movie.backdrop_path)}>\r\n            <h1>{movie.title}</h1>\r\n            <h5>{genres}</h5>\r\n            <p>{movie.overview}</p>\r\n            <p>Popularity: {movie.popularity}</p>\r\n            <p>Budget: ${movie.budget}</p>\r\n          </div>\r\n        </Loader>\r\n    </Dialog>\r\n    );\r\n  }\r\n}\r\n// \"connect\" our movie modal to the component store\r\nexport default connect(\r\n  // Map nodes in our state to a properties of our component\r\n  (state) => ({\r\n    // Using lodash get, recursively check that a property is defined\r\n    // before try to access it - if it is undefined, it will return your default value\r\n    // _.get(object, 'path.to.targets[0].neat.stuff', defaultValue)\r\n    isOpen: _.get(state, 'movieBrowser.movieModal.isOpen', false),\r\n    movieId: _.get(state, 'movieBrowser.movieModal.movieId'),\r\n    movie: _.get(state, 'movieBrowser.movieDetails.response', {}),\r\n    isLoading: _.get(state, 'movieBrowser.movieDetails.isLoading', false),\r\n  }),\r\n  // Map an action to a prop, ready to be dispatched\r\n  { closeMovieModal, getMovieDetails }\r\n)(MovieModalContainer);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Container, Row} from 'react-bootstrap';\r\nimport {AppBar} from 'material-ui';\r\nimport * as movieActions from './movie-browser.actions';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieModal from './movie-modal/movie-modal.container';\r\n\r\nclass MovieBrowser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      currentMovies: []\r\n    };\r\n    // Binds the handleScroll to this class (MovieBrowser)\r\n    // which provides access to MovieBrowser's props\r\n    // Note: You don't have to do this if you call a method\r\n    // directly from a lifecycle method\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.onscroll = this.handleScroll;\r\n    this.props.getTopMovies(this.state.currentPage);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll() {\r\n    const {topMovies} = this.props;\r\n    if (!topMovies.isLoading) {\r\n      let percentageScrolled = scrollHelpers.getScrollDownPercentage(window);\r\n      if (percentageScrolled > .8) {\r\n        const nextPage = this.state.currentPage + 1;\r\n        this.props.getTopMovies(nextPage);\r\n        this.setState({currentPage: nextPage});\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {topMovies} = this.props;\r\n    const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n    return (\r\n      <div>\r\n        <AppBar className=\"myAppBar\" title='Movie API' />\r\n        <Container>\r\n          <Row>\r\n            {/* <p>Search will go here</p> */}\r\n          </Row>\r\n          <Row>\r\n            <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n          </Row>\r\n        </Container>\r\n        <MovieModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  // Map nodes in our state to a properties of our component\r\n  (state) => ({\r\n    topMovies: state.movieBrowser.topMovies\r\n  }),\r\n  // Map action creators to properties of our component\r\n  { ...movieActions }\r\n)(MovieBrowser);\r\n","export const getScrollDownPercentage = (window) => {\r\n    const pageHeight = window.document.documentElement.scrollHeight;\r\n    const clientHeight = window.document.documentElement.clientHeight;\r\n    const scrollPos = window.pageYOffset;\r\n    const currentPosition = scrollPos + clientHeight;\r\n    const percentageScrolled = currentPosition / pageHeight;\r\n    return percentageScrolled;\r\n  }","import React, { Component } from 'react';\nimport MovieBrowser from './modules/movie-browser/movie-browser.container';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nclass App extends Component {\n  render() {\n    return (\n      // Provides the Material UI theme to child components\n      <MuiThemeProvider>\n        <MovieBrowser />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { keys } from './movie-modal.actions';\r\nimport { createReducer } from '../../common/redux.helpers';\r\n\r\n// Placeholder reducer for our movie modal\r\nconst movieModalReducer = createReducer({ isOpen: false, movieId: undefined }, {\r\n  [keys.OPEN_MOVIE_MODAL]: (state, action) => ({\r\n    isOpen: true,\r\n    movieId: action.movieId\r\n  }),\r\n  [keys.CLOSE_MOVIE_MODAL]: (state, action) => ({\r\n    // Persist the movieId (and any other state tree objects)\r\n    ...state,\r\n    isOpen: false\r\n  })\r\n});\r\n\r\nexport default movieModalReducer;","import {combineReducers} from 'redux';\r\nimport { createAsyncReducer } from '../common/redux.helpers';\r\nimport { keys as movieActionKeys } from './movie-browser.actions';\r\nimport movieModalReducer from './movie-modal/movie-modal.reducer';\r\n\r\n\r\n// This will create a new state with both the existing \r\n// movies and new pages of movies\r\nconst moviesSuccessReducer = (state, action) => {\r\n  const existingMovies = state.response ? state.response.results : [];\r\n  // Create a new state object to be returned\r\n  // When creating the new state, be sure to include any\r\n  // existing properties we want to persist\r\n  return {\r\n    ...state,\r\n    isLoading: false,\r\n    response: {\r\n      ...action.response,\r\n      results: [\r\n        ...existingMovies,\r\n        ...action.response.results\r\n      ]\r\n    }\r\n  };\r\n}\r\n\r\n// Combines our movie browser related reducers to build our movieBrowser reducer\r\nconst movieBrowserReducer = combineReducers({\r\n  movieModal: movieModalReducer,\r\n  topMovies: createAsyncReducer(movieActionKeys.GET_TOP_MOVIES, {\r\n    [`${movieActionKeys.GET_TOP_MOVIES}_SUCCESS`]: moviesSuccessReducer\r\n  }),\r\n  movieSearch: createAsyncReducer(movieActionKeys.SEARCH_MOVIES, {\r\n    [`${movieActionKeys.SEARCH_MOVIES}_SUCCESS`]: moviesSuccessReducer\r\n  }),\r\n  movieDetails: createAsyncReducer(movieActionKeys.GET_MOVIE_DETAILS),\r\n});\r\n\r\nexport default movieBrowserReducer;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunkMiddlware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger'\r\nimport movieBrowserReducer from './modules/movie-browser/movie-browser.reducers';\r\n\r\n// The root reducer will serve as the parent for all other reducers\r\n// We will add our module reducers to the root level here\r\nconst rootReducer = combineReducers({\r\n  movieBrowser: movieBrowserReducer\r\n});\r\n\r\n// Will log information about dispatched actions to the console\r\n// including the previous state, the action details, and the next state\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst store = createStore(\r\n  // reducer\r\n  rootReducer,\r\n  // preloadedState\r\n  undefined,\r\n  // compose simply enables us to apply several store enhancers\r\n  // Right now, we are only using applyMiddlware, so this is\r\n  // just future-proofing our application\r\n  compose(\r\n    // Middlware can intercept dispatched actions before they reach the reducer\r\n    // in order to modify it in some way\r\n    applyMiddleware(\r\n      // Thunk allows functions to be returned from action creators\r\n      // so we can do things like dispatch multiple actions in a \r\n      // single action creator for async actions\r\n      thunkMiddlware,\r\n      // logger will output the previous state, next state, and\r\n      // the action details to the console\r\n      loggerMiddleware\r\n    )\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n    // Provide our store to the application\n    <Provider store={store}>\n      <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}